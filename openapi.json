{
  "openapi": "3.1.0",
  "info": {
    "title": "Vercel API",
    "description": "Vercel combines the best developer experience with an obsessive focus on end-user performance. Our platform enables frontend teams to do their best work.",
    "contact": {
      "email": "support@vercel.com",
      "name": "Vercel Support",
      "url": "https://vercel.com/support"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.vercel.com",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/abuse/reports": {
      "post": {
        "description": "Creates a Vercel abuse report for a Phishing, DMCA or Trademark violation.",
        "operationId": "createReport",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Creates an abuse report",
        "tags": ["api-abuse"],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "teamId": {
                "value": "team_1a2b3c4d5e6f7g8h9i0j"
              }
            },
            "description": "The unique identifier of the Vercel team submitting the report. **Either `teamId` or `slug` must be provided.**"
          },
          {
            "name": "slug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "slug": {
                "value": "fight-abuse-inc"
              }
            },
            "description": "The unique slug of the Vercel team submitting the report. **Either `teamId` or `slug` must be provided.**"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "report": {
                        "$ref": "#/components/schemas/PhishingReport"
                      },
                      "screenshotEvidence": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "binary",
                          "contentMediaType": [
                            "image/gif",
                            "image/jpeg",
                            "image/png",
                            "image/webp"
                          ],
                          "maxLength": 4194304
                        },
                        "minItems": 1,
                        "maxItems": 5,
                        "description": "Screenshot(s) demonstrating phishing content. **Required for phishing reports.** Accepted file types: `image/gif`, `image/jpeg`, `image/png` and `image/webp`. Max file size: 4 MB per file, with a maximum of 5 files. Please provide screenshot(s) of how this site is phishing. Please be clear whether you mean to report ALL of the material at a particular URL, ONLY PORTIONS of the material at a particular URL, and HOW the material infringes."
                      },
                      "personalImpactEvidence": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "binary",
                          "contentMediaType": [
                            "image/gif",
                            "image/jpeg",
                            "image/png",
                            "image/webp"
                          ],
                          "maxLength": 4194304
                        },
                        "maxItems": 5,
                        "description": "Evidence demonstrating personal impact on the reporter or user. **Required for phishing reports when reporterOrUserWasImpacted is set to true.** Accepted file types: `image/gif`, `image/jpeg`, `image/png` and 'image/webp'. Max file size: 4 MB per file, with a maximum of 5 files. Please provide evidence of how you, or a user, were personally impacted by this phishing site."
                      }
                    },
                    "required": ["report", "screenshotEvidence"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "report": {
                        "$ref": "#/components/schemas/TrademarkReport"
                      }
                    },
                    "required": ["report"]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "report": {
                        "$ref": "#/components/schemas/DmcaReport"
                      }
                    },
                    "required": ["report"]
                  }
                ]
              },
              "encoding": {
                "screenshotEvidence": {
                  "contentType": "image/gif, image/jpeg, image/png, image/webp"
                },
                "personalImpactEvidence": {
                  "contentType": "image/gif, image/jpeg, image/png, image/webp"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Abuse report successfully created."
          },
          "400": {
            "description": "Invalid request. The request body is not valid.",
            "content": {
              "application/json": {
                "examples": {
                  "unsupportedFileType": {
                    "summary": "Unsupported Mime Type",
                    "value": {
                      "code": "validation_error",
                      "message": "Unsupported mime type. Supported mime types: image/gif, image/jpeg, image/png, image/webp."
                    }
                  },
                  "missingScreenshotEvidence": {
                    "summary": "Missing Screenshot Evidence",
                    "value": {
                      "code": "validation_error",
                      "message": "Phishing report is missing screenshotEvidence files."
                    }
                  },
                  "missingPersonalImpactEvidence": {
                    "summary": "Missing Personal Impact Evidence",
                    "value": {
                      "code": "validation_error",
                      "message": "Phishing report is missing personalImpactEvidence file(s)."
                    }
                  },
                  "missingRequestBody": {
                    "summary": "Missing Request Body",
                    "value": {
                      "code": "validation_error",
                      "message": "Missing request body"
                    }
                  },
                  "missingOrInvalidBodyReport": {
                    "summary": "Missing or Invalid body.report",
                    "value": {
                      "code": "validation_error",
                      "message": "Missing or invalid body.report"
                    }
                  },
                  "exceedsTotalUploadSize": {
                    "summary": "Exceeds Total Upload Size Limit",
                    "value": {
                      "code": "validation_error",
                      "message": "Total upload size exceeds the limit of 4 MB."
                    }
                  },
                  "invalidJSON": {
                    "summary": "Invalid JSON Format",
                    "value": {
                      "code": "validation_error",
                      "message": "Invalid JSON in body.report: [error details]"
                    }
                  },
                  "invalidReportData": {
                    "summary": "Invalid Report Data",
                    "value": {
                      "code": "validation_error",
                      "message": "Invalid report data: [error details]"
                    }
                  },
                  "failedUpload": {
                    "summary": "Failed Attachment Upload",
                    "value": {
                      "code": "validation_error",
                      "message": "Failed to upload [type] attachment [filename]: [error details]"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. You must be authenticated to access this resource."
          },
          "403": {
            "description": "Forbidden. You do not have permission to access this resource."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseReport": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "maxLength": 25,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "A short identifier of the report source, formatted for directory naming. Example: 'fight-abuse-inc'",
            "examples": ["fight-abuse-inc"]
          },
          "type": {
            "type": "string",
            "enum": [
              "phishing-abuse-reported",
              "trademark-abuse-reported",
              "dmca-abuse-reported"
            ],
            "description": "The type of the abuse report report",
            "examples": ["phishing-abuse-reported"]
          },
          "payload": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhishingReportPayload"
              },
              {
                "$ref": "#/components/schemas/TrademarkReportPayload"
              },
              {
                "$ref": "#/components/schemas/DmcaReportPayload"
              }
            ]
          }
        },
        "required": ["type", "payload"]
      },
      "ForwardReportToWebsiteOwner": {
        "type": "boolean",
        "description": "Indicate whether abuse report should be forwarded to the website owner",
        "examples": [true]
      },
      "IncludeContactInReportToWebsiteOwner": {
        "type": "boolean",
        "description": "Should the reporter's name and contact information be included with the report to the website owner?",
        "examples": [false]
      },
      "ReporterEmail": {
        "type": "string",
        "format": "email",
        "description": "The email address of the reporter",
        "examples": ["support@fight-abuse-inc.com"]
      },
      "ReporterName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 80,
        "description": "The full name of the reporter",
        "examples": ["Fight Abuse Inc"]
      },
      "ReporterCategory": {
        "type": "string",
        "maxLength": 255,
        "description": "A report category provided by the reporter. Typically, a category in reporter's tracking system.",
        "examples": ["Phishing Site"]
      },
      "ReporterReferenceUrl": {
        "type": "string",
        "format": "uri",
        "maxLength": 255,
        "description": "A reference URL provided by the reporter. Typically, a URL to case in reporter's tracking system.",
        "examples": ["https://fight-abuse.com/case/12345"]
      },
      "ReporterSignature": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The full legal name, or name of the organization reporting abuse",
        "examples": ["Fight Abuse Inc"]
      },
      "PhishingReportPayload": {
        "type": "object",
        "properties": {
          "forwardReportToWebsiteOwner": {
            "$ref": "#/components/schemas/ForwardReportToWebsiteOwner"
          },
          "includeContactInReportToWebsiteOwner": {
            "$ref": "#/components/schemas/IncludeContactInReportToWebsiteOwner"
          },
          "infringingUrl": {
            "type": "string",
            "description": "The URL being reported for phishing",
            "format": "uri",
            "examples": ["https://phishing.vercel.app"]
          },
          "realContentUrl": {
            "type": "string",
            "description": "The URL that the infringing URL is mimicking",
            "format": "uri",
            "examples": ["https://example.com"]
          },
          "reporterEmail": {
            "$ref": "#/components/schemas/ReporterEmail"
          },
          "reporterName": {
            "$ref": "#/components/schemas/ReporterName"
          },
          "reporterOrUserWasImpacted": {
            "type": "boolean",
            "description": "Indicate whether the user or reporter were impacted by the phishing. If yes, please attach evidence of yourself, or a user, being personally impacted.",
            "examples": [true]
          },
          "reporterCategory": {
            "$ref": "#/components/schemas/ReporterCategory"
          },
          "reporterReferenceUrl": {
            "$ref": "#/components/schemas/ReporterReferenceUrl"
          },
          "stepsToReproduce": {
            "type": "string",
            "description": "What steps recreate evidence of phishing?",
            "minLength": 1,
            "maxLength": 4000,
            "examples": [
              "1. Open the URL https://phishing.vercel.app\n2. Observe that the site imitates the appearance of https://example.com\n3. The site prompts for login credentials.\n4. Enter fake credentials (e.g., username: 'testuser', password: 'testpassword').\n5. Notice that the site accepts the credentials, indicating potential credential theft."
            ]
          }
        },
        "required": [
          "reporterEmail",
          "reporterName",
          "forwardReportToWebsiteOwner",
          "includeContactInReportToWebsiteOwner",
          "infringingUrl",
          "reporterOrUserWasImpacted",
          "stepsToReproduce"
        ]
      },
      "PhishingReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseReport"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "phishing-abuse-reported",
                "examples": ["phishing-abuse-reported"]
              },
              "payload": {
                "$ref": "#/components/schemas/PhishingReportPayload"
              }
            },
            "required": ["type", "payload"]
          }
        ]
      },
      "ReporterContactPhone": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["phone"],
            "examples": ["phone"]
          },
          "phoneNumber": {
            "type": "string",
            "minLength": 1,
            "maxLength": 40,
            "examples": ["+1 123-456-7890"]
          },
          "countryCode": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["US"]
          }
        },
        "required": ["type", "phoneNumber", "countryCode"]
      },
      "ReporterContactAddress": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["address"],
            "examples": ["address"]
          },
          "country": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["US"]
          },
          "address1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["123 Main St"]
          },
          "address2": {
            "type": "string",
            "maxLength": 255,
            "examples": ["Suite 100"]
          },
          "city": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["San Francisco"]
          },
          "state": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["CA"]
          },
          "zip": {
            "oneOf": [
              {
                "type": "string",
                "pattern": "^\\d{5}$",
                "examples": ["94105"]
              },
              {
                "type": "string",
                "pattern": "^\\d{5}-\\d{4}$",
                "examples": ["94105-1234"]
              }
            ]
          },
          "taxIdType": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["EIN"]
          },
          "taxIdValue": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "examples": ["12-3456789"]
          }
        },
        "required": ["type", "country", "address1", "city", "state", "zip"]
      },
      "ReporterContact": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ReporterContactPhone"
          },
          {
            "$ref": "#/components/schemas/ReporterContactAddress"
          }
        ],
        "description": "The contact information of the reporter"
      },
      "ReporterClaimsContentIsUnauthorized": {
        "type": "boolean",
        "description": "Indicate whether the reporter, in good faith, claims the content is unauthorized",
        "examples": [true]
      },
      "TrademarkReportPayload": {
        "type": "object",
        "properties": {
          "forwardReportToWebsiteOwner": {
            "$ref": "#/components/schemas/ForwardReportToWebsiteOwner"
          },
          "includeContactInReportToWebsiteOwner": {
            "$ref": "#/components/schemas/IncludeContactInReportToWebsiteOwner"
          },
          "descriptionOfConfusion": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32768,
            "examples": [
              "Users might confuse the infringing site with the official site."
            ]
          },
          "infringedUrls": {
            "type": "array",
            "declaration": "Identify the location of the original trademarked material that has been infringed.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL where the original material is found",
                  "examples": ["https://example.com"]
                },
                "description": {
                  "type": "string",
                  "description": "Where is the infringing material found on the infringing URL? Is it the entire material or a specific portion?",
                  "minLength": 1,
                  "maxLength": 32768,
                  "examples": ["Logo and branding"]
                }
              },
              "required": ["url", "description"]
            },
            "minItems": 1,
            "maxItems": 50
          },
          "infringingUrls": {
            "type": "array",
            "description": "Identify the material you believe to be infringing your trademark.\nBe clear whether you mean to report ALL of the material at a particular URL only portions of the material at a particular URL, and how the material infringes.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL where the infringing material is found",
                  "examples": ["https://unauthorized-brand.vercel.app"]
                },
                "description": {
                  "type": "string",
                  "description": "Where is the infringing material found on the infringing URL? Is it the entire material or a specific portion?",
                  "minLength": 1,
                  "maxLength": 32768,
                  "examples": ["The entire material"]
                }
              },
              "required": ["url", "description"]
            },
            "minItems": 1,
            "maxItems": 50
          },
          "reporterClaimsContentIsUnauthorized": {
            "$ref": "#/components/schemas/ReporterClaimsContentIsUnauthorized"
          },
          "reporterClaimsOwnershipOfTrademark": {
            "type": "boolean",
            "description": "Indicate whether the reporter, in good faith, claims ownership of the trademark",
            "examples": [true]
          },
          "reporterContact": {
            "$ref": "#/components/schemas/ReporterContact"
          },
          "reporterEmail": {
            "$ref": "#/components/schemas/ReporterEmail"
          },
          "reporterName": {
            "$ref": "#/components/schemas/ReporterName"
          },
          "reporterCategory": {
            "$ref": "#/components/schemas/ReporterCategory"
          },
          "reporterReferenceUrl": {
            "$ref": "#/components/schemas/ReporterReferenceUrl"
          },
          "reporterSignature": {
            "$ref": "#/components/schemas/ReporterSignature"
          },
          "requestedAction": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32768,
            "description": "What action is the reporter requesting?",
            "examples": ["Removal of infringing content"]
          },
          "trademarkDescription": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32768,
            "description": "Trademarked word, symbol, description",
            "examples": ["The company's registered logo"]
          },
          "trademarkRegistrationNumber": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The trademark registration number",
            "examples": ["123456"]
          },
          "trademarkRegistrationOffice": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The trademark registration office",
            "examples": ["USPTO (United States Patent and Trademark Office)"]
          }
        },
        "required": [
          "descriptionOfConfusion",
          "forwardReportToWebsiteOwner",
          "includeContactInReportToWebsiteOwner",
          "infringedUrls",
          "infringingUrls",
          "reporterClaimsContentIsUnauthorized",
          "reporterClaimsOwnershipOfTrademark",
          "reporterEmail",
          "reporterName",
          "reporterReferenceUrl",
          "reporterSignature",
          "requestedAction",
          "trademarkDescription",
          "trademarkRegistrationNumber",
          "trademarkRegistrationOffice"
        ]
      },
      "TrademarkReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseReport"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "trademark-abuse-reported",
                "examples": ["trademark-abuse-reported"]
              },
              "payload": {
                "$ref": "#/components/schemas/TrademarkReportPayload"
              }
            },
            "required": ["type", "payload"]
          }
        ]
      },
      "DmcaReportPayload": {
        "type": "object",
        "properties": {
          "forwardReportToWebsiteOwner": {
            "$ref": "#/components/schemas/ForwardReportToWebsiteOwner"
          },
          "includeContactInReportToWebsiteOwner": {
            "$ref": "#/components/schemas/IncludeContactInReportToWebsiteOwner"
          },
          "copyrightHolderDeclaration": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32768,
            "description": "Are you the copyright holder or authorized to act on behalf of the copyright holder?",
            "examples": [
              "Yes, I am authorized to act on behalf of the copyright holder"
            ]
          },
          "descriptionOfOwnedWork": {
            "type": "string",
            "minLength": 1,
            "maxLength": 32768,
            "description": "A detailed description of the copyrighted work you own and believe to be infringed",
            "examples": [
              "Original digital artwork created and owned exclusively by me"
            ]
          },
          "infringingUrls": {
            "type": "array",
            "description": "Identify the material you believe to be infringing your copyright.\nBe clear whether you mean to report ALL of the material at a particular URL or only portions of the material at a particular URL, and how the material infringes.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL where the infringing material is found",
                  "examples": ["https://pirated-materials.vercel.app"]
                },
                "description": {
                  "type": "string",
                  "description": "Where is the infringing material found on the infringing URL? Is it the entire material or a specific portion?",
                  "minLength": 1,
                  "maxLength": 32768,
                  "examples": ["The entire material"]
                }
              },
              "required": ["url", "description"]
            },
            "minItems": 1,
            "maxItems": 50
          },
          "infringedUrls": {
            "type": "array",
            "description": "Provide a detailed description of the copyrighted work you own and believe to be infringed.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL where the original material is found",
                  "examples": ["https://example.com/my-original-work"]
                },
                "description": {
                  "type": "string",
                  "description": "Where at the URL can the copyrighted material be found? Is it the entire material at the URL or a specific portion?",
                  "minLength": 1,
                  "maxLength": 32768,
                  "examples": ["The entire page contains my original artwork."]
                }
              },
              "required": ["url", "description"]
            },
            "minItems": 1,
            "maxItems": 50
          },
          "reporterClaimsContentIsUnauthorized": {
            "$ref": "#/components/schemas/ReporterClaimsContentIsUnauthorized"
          },
          "reporterClaimsOwnership": {
            "type": "boolean",
            "examples": [true]
          },
          "reporterContact": {
            "$ref": "#/components/schemas/ReporterContact"
          },
          "reporterEmail": {
            "$ref": "#/components/schemas/ReporterEmail"
          },
          "reporterName": {
            "$ref": "#/components/schemas/ReporterName"
          },
          "reporterCategory": {
            "$ref": "#/components/schemas/ReporterCategory"
          },
          "reporterReferenceUrl": {
            "$ref": "#/components/schemas/ReporterReferenceUrl"
          },
          "reporterSignature": {
            "$ref": "#/components/schemas/ReporterSignature"
          }
        },
        "required": [
          "reporterEmail",
          "reporterName",
          "forwardReportToWebsiteOwner",
          "includeContactInReportToWebsiteOwner",
          "copyrightHolderDeclaration",
          "descriptionOfOwnedWork",
          "infringedUrls",
          "infringingUrls",
          "reporterClaimsContentIsUnauthorized",
          "reporterClaimsOwnership",
          "reporterSignature"
        ]
      },
      "DmcaReport": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseReport"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "const": "dmca-abuse-reported",
                "examples": ["dmca-abuse-reported"]
              },
              "payload": {
                "$ref": "#/components/schemas/DmcaReportPayload"
              }
            },
            "required": ["type", "payload"]
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "description": "Default authentication mechanism"
      },
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.vercel.com/oauth/authorize",
            "tokenUrl": "https://api.vercel.com/oauth/access_token",
            "scopes": {}
          }
        }
      }
    }
  }
}
